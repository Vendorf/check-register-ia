{"version":3,"sources":["main/websocket-client.js","logo.svg","main/CurrencyInput.jsx","main/CheckRowComponent.jsx","main/SummaryComponent.jsx","main/FilterComponent.jsx","main/CheckTableComponent.jsx","main/AccountPaneComponent.jsx","SubscriptionsHistory/data.js","SubscriptionsHistory/SubscriptionsHistory.js","main/temp.jsx","main/ReportComponent.jsx","main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["SockJS","require","Stomp","module","exports","register","registrations","socket","stompClient","over","connect","frame","forEach","registration","subscribe","route","callback","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","CurrencyInput","props","this","maskOptions","inputProps","currencyMask","createNumberMask","mask","React","Component","defaultProps","inputMode","CheckRowComponent","state","transactionNameInput","getSafe","check","transactionName","memoInput","memo","paymentInput","payment","value","depositInput","deposit","dateInput","date","console","log","handleEdit","bind","transactionInputChanged","memoInputChanged","paymentInputChanged","depositInputChanged","dateInputChanged","transactionInputRef","createRef","memoInputRef","paymentInputRef","depositInputRef","datePickerRef","setState","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","updatedCheck","current","focus","fn","defaultValue","e","event","target","className","selected","onChange","classes","datePicker","ref","placeholder","type","SummaryComponent","Grid","container","spacing","justify","item","xs","Paper","filterPaper","Typography","style","color","marginRight","summaryDatePicker","summary","baseDate","handleBaseDate","Button","filterButton","onClick","handleBaseDateClear","variant","total","paymentTotal","depositTotal","futureTotal","futurePaymentTotal","futureDepositTotal","FilterComponent","filter","transactionNameFilter","memoFilter","paymentFilter","depositFilter","sort","handleSubmit","handleClear","transactionNameFilterChanged","memoFilterChanged","paymentFilterChanged","depositFilterChanged","transactionNameSortChanged","memoSortChanged","paymentSortChanged","depositSortChanged","handleSort","handleFilters","root","paper","input","Select","disableUnderline","MenuProps","menu","MenuItem","button","CheckTableComponent","checks","scrollEndRef","newCheckRef","scrollToBottom","refreshChecks","handleNew","intervalPost","doSort","finalCheckRef","updatedContent","hasBeenRefreshed","websocketStompClient","promise","Promise","resolve","thisRef","setInterval","then","resolveCallback","refs","scrollIntoView","xhr","XMLHttpRequest","addEventListener","open","setRequestHeader","send","JSON","stringify","newFilter","newSort","postSortCallback","list","sortConfig","a","b","toUpperCase","parseFloat","isNaN","dateStr","isValidDate","onRefreshCallback","onreadystatechange","readyState","parse","response","result","i","substring","onRetreivedCallback","prevState","map","id","contained","arrayCheck","push","newCheck","resetState","newChecks","giveFocus","newDate","main","filterView","filterRoot","filterInput","select","filterSelect","filterMenu","tableView","checkEntry","key","undefined","summaryView","subscriptionsItems","name","ratio","Math","round","subscriptionsHistoryChart","data","datasets","backgroundColor","borderColor","borderWidth","label","fill","yAxisID","borderDash","labels","options","scales","xAxes","gridLines","display","ticks","fontColor","autoSkipPadding","yAxes","maxTicksLimit","position","tooltips","mode","intersect","hover","responsive","maintainAspectRatio","useStyles","makeStyles","theme","cardHeader","borderBottom","borderBottomColor","palette","divider","cardBody","overflow","headerTitleBox","headerActionsBox","textAlign","headerIcon","primary","verticalAlign","chartBox","borderRight","borderRightColor","chartContainer","width","paddingBottom","minHeight","chart","height","top","left","cardContent","ratingBox","flexDirection","justifyContent","ratingItemValueBox","fontSize","ratingItemValue","ratingItemRatio","marginLeft","Subscriptions","Card","CardHeader","avatar","action","IconButton","aria-label","size","title","CardContent","sm","md","align","LinearProgress","appBar","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","background","default","padding","ReportComponent","SubscriptionsHistory","styles","drawerClosed","flex","overflowY","split","zIndex","toolBar","toolBarButton","textTransform","borderRadius","maxHeight","maxWidth","minWidth","subToolBar","paddingTop","listButton","accountIcon","marginBottom","marginTop","border","margin","transition","outline","boxShadow","Main","useState","setOpen","AppBar","Toolbar","disableGutters","component","Link","to","Drawer","transitionDuration","List","ListItem","ListItemIcon","ListItemText","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dcb63de5.chunk.js","sourcesContent":["'use strict';\r\n\r\nconst SockJS = require('sockjs-client');\r\nconst Stomp = require('stompjs');\r\n\r\nfunction register(registrations){\r\n    const socket = SockJS('http://localhost:8080/socket');\r\n    const stompClient = Stomp.over(socket);\r\n    stompClient.connect({}, (frame) => {\r\n        registrations.forEach((registration) => {\r\n            stompClient.subscribe(registration.route, registration.callback);\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports.register = register","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport MaskedInput from 'react-text-mask'\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\r\n\r\nconst defaultMaskOptions = {\r\n  prefix: '$',\r\n  suffix: '',\r\n  includeThousandsSeparator: true,\r\n  thousandsSeparatorSymbol: ',',\r\n  allowDecimal: true,\r\n  decimalSymbol: '.',\r\n  decimalLimit: 2, // how many digits allowed after the decimal\r\n  integerLimit: 7, // limit length of integer numbers\r\n  allowNegative: false,\r\n  allowLeadingZeroes: false,\r\n}\r\n\r\n\r\nclass CurrencyInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        const {maskOptions, ...inputProps} = this.props;\r\n        const currencyMask = createNumberMask({\r\n            ...defaultMaskOptions,\r\n            ...maskOptions,\r\n          });\r\n        return (\r\n            <MaskedInput mask={currencyMask} {...inputProps} />\r\n        );\r\n    }\r\n}\r\n\r\n// const CurrencyInput = ({ maskOptions, ...inputProps }) => {\r\n//   const currencyMask = createNumberMask({\r\n//     ...defaultMaskOptions,\r\n//     ...maskOptions,\r\n//   })\r\n\r\n//   return <MaskedInput mask={currencyMask} {...inputProps} />\r\n// }\r\n\r\nCurrencyInput.defaultProps = {\r\n  inputMode: 'numeric',\r\n  maskOptions: {},\r\n}\r\n\r\nCurrencyInput.propTypes = {\r\n  inputmode: PropTypes.string,\r\n  maskOptions: PropTypes.shape({\r\n    prefix: PropTypes.string,\r\n    suffix: PropTypes.string,\r\n    includeThousandsSeparator: PropTypes.bool,\r\n    thousandsSeparatorSymbol: PropTypes.string,\r\n    allowDecimal: PropTypes.bool,\r\n    decimalSymbol: PropTypes.string,\r\n    decimalLimit: PropTypes.string,\r\n    requireDecimal: PropTypes.bool,\r\n    allowNegative: PropTypes.bool,\r\n    allowLeadingZeroes: PropTypes.bool,\r\n    integerLimit: PropTypes.number,\r\n  }),\r\n}\r\n\r\nexport default CurrencyInput\r\n","import React, { useState } from 'react';\r\nimport CurrencyInput from './CurrencyInput';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\nclass CheckRowComponent extends React.Component {\r\n\r\n    constructor(props) { //pass check in props\r\n        super(props);\r\n\r\n        this.state = {\r\n            transactionNameInput: this.getSafe(() => this.props.check.transactionName, \"\"),\r\n            memoInput: this.getSafe(() => this.props.check.memo, \"\"),\r\n            paymentInput: this.getSafe(() => this.props.check.payment.value, \"\"),\r\n            depositInput: this.getSafe(() => this.props.check.deposit.value, \"\"),\r\n            dateInput: (this.getSafe(() => this.props.check.date, null)),\r\n        }\r\n\r\n        console.log('temp',this.state)\r\n        //stateless\r\n\r\n        this.handleEdit.bind(this);\r\n        this.transactionInputChanged.bind(this);\r\n        this.memoInputChanged.bind(this);\r\n        this.paymentInputChanged.bind(this);\r\n        this.depositInputChanged.bind(this);\r\n        this.dateInputChanged.bind(this);\r\n\r\n        // this.resetState.bind(this);\r\n\r\n\r\n        this.transactionInputRef = React.createRef();\r\n        this.memoInputRef = React.createRef();\r\n        this.paymentInputRef = React.createRef();\r\n        this.depositInputRef = React.createRef();\r\n\r\n        this.datePickerRef = React.createRef();\r\n    }\r\n\r\n\r\n    resetState(){\r\n        this.setState({\r\n            transactionNameInput: this.getSafe(() => this.props.check.transactionName, \"\"),\r\n            memoInput: this.getSafe(() => this.props.check.memo, \"\"),\r\n            paymentInput: this.getSafe(() => this.props.check.payment.value, \"\"),\r\n            depositInput: this.getSafe(() => this.props.check.deposit.value, \"\"),\r\n            dateInput:  (this.getSafe(() => this.props.check.date, null)),\r\n        });\r\n    }\r\n\r\n    formatDate(date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    // isValidDate(d) {\r\n    //     return d instanceof Date && !isNaN(d);\r\n    //   }\r\n\r\n    // getDate(dateStr){\r\n    //     console.log('datestr', dateStr)\r\n    //     let date = new Date(dateStr + \"Z\");\r\n    //     if(this.isValidDate(date)){\r\n    //         return date;\r\n    //     }\r\n    //     return new Date();\r\n    // }\r\n    // handleEdit(event) {\r\n\r\n    //     console.log('datePickerRef.current', this.datePickerRef.current);\r\n\r\n    //     //kind of retarded, but can do:\r\n    //     //depending on what value, set the corresponding prop to that value\r\n    //     //then let updatedCheck = {...this.props.check}\r\n\r\n    //     // console.log('paymentInputRef.current', this.paymentInputRef.current)\r\n    //     // console.log('depositInputRef.current', this.depositInputRef.current)\r\n    //     // console.log('event.target', event.target)\r\n        \r\n\r\n    //     //ok so this solution is retarded but it allows you to do it all in one method rather than make a new method for every textbox\r\n    //     //I'd rather do that because while it is technically better to be able to do fine updates to the check rather than update every\r\n    //     //single field, I might as well just update every field here and then server-side do finer checks and only update what's necessary\r\n    //     //in the database. This is technically more error-prone but significantly less verbose on the front-end code front and will hence\r\n    //     //be a lot easier to manage and understand in future, as well as easier to write at the moment, so I'm just doing that\r\n    //     //Yes, it means I'm technically creating the check and then throwing it up to the parent which then sets its own check to the same\r\n    //     //values then goes back down here passing props in order to update the view, which is less memory efficient and computationally\r\n    //     //more intensive, but idgaf rn this is a tiny application; if it becomes a problem I have this wall of text to tell me how to do\r\n    //     //it correctly so there you go\r\n\r\n    //     let updatedCheck = {\r\n    //             ...this.props.check, //for id; technically not necessary bc stateless but hey\r\n    //             transactionName: this.refs.transactionInput.value,\r\n    //             memo: this.refs.memoInput.value,\r\n    //             payment: {\r\n    //                 value: this.refs.paymentInput.value\r\n    //             },\r\n    //             deposit: {\r\n    //                 value: this.refs.depositInput.value\r\n    //             }\r\n    //     };\r\n\r\n    //     this.props.handleEdit(updatedCheck);\r\n    // }\r\n\r\n    handleEdit(){\r\n        let updatedCheck = {\r\n            ...this.props.check, //for id; technically not necessary bc stateless but hey\r\n            transactionName: this.state.transactionNameInput,\r\n            memo: this.state.memoInput,\r\n            payment: {\r\n                value: this.state.paymentInput\r\n            },\r\n            deposit: {\r\n                value: this.state.depositInput\r\n            },\r\n            date: this.state.dateInput\r\n        };\r\n        \r\n        this.props.handleEdit(updatedCheck);\r\n    }\r\n\r\n    //talk about this maybe for complexity; discuss how react handles rendering, accessing the dom, etc.\r\n    giveFocus(){\r\n        console.log('giving focus')\r\n\r\n        if(this.state.transactionNameInput){\r\n            this.transactionInputRef.current.focus();\r\n        } else if(this.state.memoInput){\r\n            this.memoInputRef.current.focus();\r\n        } else if(this.state.paymentInput){\r\n            this.paymentInputRef.current.focus();\r\n        } else if(this.state.depositInput){\r\n            this.depositInputRef.current.focus();\r\n        } else{\r\n            this.transactionInputRef.current.focus();\r\n            //default behavior\r\n        }\r\n\r\n\r\n\r\n\r\n        // // console.log('explicit ref', this.refs.transactionInput);\r\n        // // console.log('explicit', this.refs.transactionInput.value);\r\n        // for(var each in this.refs){\r\n        //     console.log('ref', this.refs[each])\r\n        //     console.log('each', this.refs[each].props);\r\n        //     if(this.refs[each].value){\r\n        //         this.refs[each].focus();\r\n        //     }\r\n        // }\r\n        \r\n        // if(this.refs.transactionInput.value){\r\n        //     this.refs.transactionInput.focus();\r\n        // }\r\n    }\r\n\r\n    getSafe(fn, defaultValue) {\r\n        try {\r\n            return fn();\r\n        } catch (e) {\r\n            return defaultValue;\r\n        }\r\n    }\r\n\r\n    transactionInputChanged(event){\r\n        this.setState({\r\n            transactionNameInput: event.target.value\r\n        }, this.handleEdit.bind(this));\r\n    }\r\n\r\n    memoInputChanged(event){\r\n        this.setState({\r\n            memoInput: event.target.value\r\n        }, this.handleEdit.bind(this));\r\n    }\r\n\r\n    paymentInputChanged(event){\r\n        this.setState({\r\n            paymentInput: event.target.value\r\n        }, this.handleEdit.bind(this));\r\n    }\r\n\r\n    depositInputChanged(event){\r\n        this.setState({\r\n            depositInput: event.target.value\r\n        }, this.handleEdit.bind(this));\r\n    }\r\n\r\n    dateInputChanged(date){\r\n        this.setState({\r\n            dateInput: date\r\n        }, this.handleEdit.bind(this));\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //replace this with material ui Grid for better resize controls etc.\r\n        //also use this: https://www.nicknish.co/blog/react-currency-input\r\n            //react-text-mask and text-mask-addons already installed\r\n\r\n        //https://reactdatepicker.com/ so robust!\r\n        return (\r\n            <div className=\"check-row\">\r\n                <DatePicker selected={this.state.dateInput} onChange={this.dateInputChanged.bind(this)} className={this.props.classes.datePicker} ref={this.datePickerRef}/>\r\n                \r\n                {/* <TextField InputProps={{ disableUnderline: true }} className=\"check-text-field\" type=\"date\" value={this.getSafe(()=> this.state.dateInput, \"\")} onChange={this.dateInputChanged.bind(this)}/> */}\r\n                {/* problem is that these are slow and have various problems :/ */}\r\n                {/* <TextField className=\"check-text-field\" inputProps={{style: {fontSize: 12}}} value={this.getSafe(() => this.state.transactionNameInput, \"\")} placeholder=\"Name\" inputRef={this.transactionInputRef} onChange={this.transactionInputChanged.bind(this)}/>\r\n                <TextField className=\"check-text-field\" inputProps={{style: {fontSize: 12}}} value={this.getSafe(() => this.state.memoInput, \"\")} placeholder=\"memo\" inputRef={this.memoInputRef} onChange={this.memoInputChanged.bind(this)}/>\r\n                <TextField className=\"check-text-field\" inputProps={{style: {fontSize: 12}}} type=\"number\" value={this.getSafe(() => this.state.paymentInput, \"\")} placeholder=\"+0.00\" inputRef={this.paymentInputRef} onChange={this.paymentInputChanged.bind(this)}/>\r\n                <TextField className=\"check-text-field\" inputProps={{style: {fontSize: 12}}} type=\"number\" value={this.getSafe(() => this.state.depositInput, \"\")} placeholder=\"-0.00\" inputRef={this.depositInputRef} onChange={this.depositInputChanged.bind(this)}/> */}\r\n\r\n\r\n                <input value={this.getSafe(() => this.state.transactionNameInput, \"\")} placeholder=\"Name\" ref={this.transactionInputRef} onChange={this.transactionInputChanged.bind(this)}></input>\r\n                <input value={this.getSafe(() => this.state.memoInput, \"\")} placeholder=\"memo\" ref={this.memoInputRef} onChange={this.memoInputChanged.bind(this)}></input>\r\n                <input type=\"number\" value={this.getSafe(() => this.state.paymentInput, \"\")} placeholder=\"+0.00\" ref={this.paymentInputRef} onChange={this.paymentInputChanged.bind(this)}></input>\r\n                <input type=\"number\" value={this.getSafe(() => this.state.depositInput, \"\")} placeholder=\"-0.00\" ref={this.depositInputRef} onChange={this.depositInputChanged.bind(this)}></input>\r\n                \r\n                \r\n                {/* <TextField placeholder=\"label\" value={this.getSafe(()=>this.state.transactionNameInput, \"\")} className=\"check-text-field\" onChange={this.testTextField.bind(this)} ref={this.testTextFieldRef}/> */}\r\n                \r\n                {/* <CurrencyInput type='text' value={this.getSafe(() => this.props.check.payment.value, \"\")} placeholder=\"+$0.00\" ref={this.paymentInputRef} onChange={this.handleEdit.bind(this)}></input>\r\n                <CurrencyInput type='text' value={this.getSafe(() => this.props.check.deposit.value, \"\")} placeholder=\"-$0.00\" ref={this.depositInputRef} onChange={this.handleEdit.bind(this)}></CurrencyInput> */}\r\n            </div>\r\n\r\n            //old stateful implementation\r\n            // <div>\r\n            //     <div>\r\n            //         <input value={this.getSafe(() => this.state.check.transactionName, \"\")} placeholder=\"Name\" ref=\"transactionInput\" onChange={this.handleEdit.bind(this)}></input>\r\n            //         <input value={this.getSafe(() => this.state.check.memo, \"\")} placeholder=\"memo\" ref=\"memoInput\" onChange={this.handleEdit.bind(this)}></input>\r\n            //     </div>\r\n            //     <div>\r\n            //         <input value={this.getSafe(() => this.state.check.payment.value, \"\")} placeholder=\"+0.00\" ref=\"paymentInput\" onChange={this.handleEdit.bind(this)}></input>\r\n            //         <input value={this.getSafe(() => this.state.check.deposit.value, \"\")} placeholder=\"-0.00\" ref=\"depositInput\" onChange={this.handleEdit.bind(this)}></input>\r\n            //     </div>\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckRowComponent","import React from 'react';\r\nimport { Typography, Button, Grid, Paper } from '@material-ui/core';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport './summary.css';\r\n\r\nclass SummaryComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //STATE:\r\n        //summary:\r\n        //checkBookId\r\n        //total\r\n        //symbol\r\n        //value\r\n        //paymentTotal\r\n        //symbol\r\n        //value\r\n        //depositTotal\r\n        //symbol\r\n        //value\r\n    }\r\n\r\n    getSafe(fn, defaultValue) {\r\n        try {\r\n            return fn();\r\n        } catch (e) {\r\n            return defaultValue;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"summary\">\r\n                <Grid container\r\n                    spacing={0}\r\n                    justify=\"flex-end\">\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.filterPaper}>\r\n                            <Typography style={{ color: 'rgba(255,255,255, 0.7)', marginRight: 15}}>Filter Future Date:</Typography>\r\n                            \r\n                            <DatePicker className={this.props.classes.summaryDatePicker} selected={this.getSafe(() => this.props.summary.baseDate, null)} onChange={this.props.handleBaseDate} />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Paper className={this.props.classes.filterPaper}>\r\n                            <Button className={this.props.classes.filterButton} onClick={this.props.handleBaseDateClear}>Clear</Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Typography variant=\"h3\">{'$' + this.getSafe(() => this.props.summary.total.value, \"---\")}</Typography>\r\n                <Typography variant=\"h4\">{'Payments: -$' + this.getSafe(() => this.props.summary.paymentTotal.value, \"---\")}</Typography>\r\n                <Typography variant=\"h4\">{'Deposits: +$' + this.getSafe(() => this.props.summary.depositTotal.value, \"---\")}</Typography>\r\n\r\n                <Typography>{\"Future Total Change: $\" + this.getSafe(() => this.props.summary.futureTotal.value, \"---\")}</Typography>\r\n                <Typography>{\"Future Payment Change: -$\" + this.getSafe(() => this.props.summary.futurePaymentTotal.value, \"---\")}</Typography>\r\n                <Typography>{\"Future Deposit Change: +$\" + this.getSafe(() => this.props.summary.futureDepositTotal.value, \"---\")}</Typography>\r\n\r\n                {/* <Typography>MVP: Reports, Calendar+Plug Reports, Input Validation, Database, Filter, Filter Summary, Accounts</Typography>\r\n                <Typography>Monday: Chemistry IA</Typography>\r\n                <Typography>Tuesday: Reports, Calendar+Plug Reports, Input Validation, Database</Typography>\r\n                <Typography>Wednesday: Database, Filter</Typography>\r\n                <Typography>Thursday: Filter Summary, Accounts, Quality of Life</Typography> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SummaryComponent","import React from 'react';\r\n\r\nimport { Grid, Paper, makeStyles, TextField, Button, Select, MenuItem } from \"@material-ui/core\";\r\nimport ReactDatePicker from 'react-datepicker';\r\n\r\nclass FilterComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filter: {\r\n                transactionNameFilter: \"\",\r\n                memoFilter: \"\",\r\n                paymentFilter: \"\",\r\n                depositFilter: \"\"\r\n            },\r\n            sort: [0,0,0,0] //1 is ascending, -1 is descending, 0 is none\r\n        }\r\n\r\n        this.handleSubmit.bind(this);\r\n        this.handleClear.bind(this);\r\n\r\n        this.transactionNameFilterChanged.bind(this);\r\n        this.memoFilterChanged.bind(this);\r\n        this.paymentFilterChanged.bind(this);\r\n        this.depositFilterChanged.bind(this);\r\n\r\n        this.transactionNameSortChanged.bind(this);\r\n        this.memoSortChanged.bind(this);\r\n        this.paymentSortChanged.bind(this);\r\n        this.depositSortChanged.bind(this);\r\n    }\r\n\r\n    handleSubmit(){\r\n        this.props.handleSort(this.state.sort, \r\n            ()=>{this.props.handleFilters(this.state.filter)});\r\n    }\r\n\r\n    handleClear(){\r\n        this.setState({\r\n            filter: {\r\n                transactionNameFilter: \"\",\r\n                memoFilter: \"\",\r\n                paymentFilter: \"\",\r\n                depositFilter: \"\"\r\n            },\r\n            sort: [0,0,0,0]\r\n        }, this.handleSubmit.bind(this));\r\n    }\r\n\r\n    transactionNameFilterChanged(event){\r\n        this.setState({\r\n            filter: {transactionNameFilter: event.target.value}\r\n        });\r\n    }\r\n\r\n    memoFilterChanged(event){\r\n        this.setState({\r\n            filter: {memoFilter: event.target.value}\r\n        });\r\n    }\r\n\r\n    paymentFilterChanged(event){\r\n        this.setState({\r\n            filter: {paymentFilter: event.target.value}\r\n        });\r\n    }\r\n\r\n    depositFilterChanged(event){\r\n        this.setState({\r\n            filter: {depositFilter: event.target.value}\r\n        });\r\n    }\r\n\r\n    //--sort handlers-------\r\n    transactionNameSortChanged(event){\r\n        this.setState({\r\n            sort: [event.target.value, 0, 0]\r\n        });\r\n    }\r\n\r\n    memoSortChanged(event){\r\n        this.setState({\r\n            sort: [0, event.target.value, 0, 0]\r\n        });\r\n    }\r\n\r\n    paymentSortChanged(event){\r\n        this.setState({\r\n            sort: [0, 0, event.target.value, 0]\r\n        });\r\n    }\r\n\r\n    depositSortChanged(event){\r\n        this.setState({\r\n            sort: [0, 0, 0, event.target.value]\r\n        });\r\n    }\r\n\r\n    //at top: show/hide button that sets open hook, then conditionaly render based on the state of open hook\r\n    render() {\r\n        return (\r\n            <div className={this.props.classes.root}>\r\n                <Grid container\r\n                    spacing={0}\r\n                    justify=\"flex-end\">\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <input value={this.state.filter.transactionNameFilter} className={this.props.classes.input} placeholder=\"Search Transaction\" onChange={this.transactionNameFilterChanged.bind(this)}></input>\r\n                            {/* <input value={this.getSafe(() => this.state.transactionNameInput, \"\")} placeholder=\"Name\" ref={this.transactionInputRef} onChange={this.transactionInputChanged.bind(this)}></input> */}\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <input value={this.state.filter.memoFilter} className={this.props.classes.input} placeholder=\"Search Memo\" onChange={this.memoFilterChanged.bind(this)}></input>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <input value={this.state.filter.paymentFilter} type=\"number\" className={this.props.classes.input} placeholder=\"Search Payment\" onChange={this.paymentFilterChanged.bind(this)}></input>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <input value={this.state.filter.depositFilter} type=\"number\" className={this.props.classes.input} placeholder=\"Search Deposit\" onChange={this.depositFilterChanged.bind(this)}></input>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            {/* can make these selects their own class for ease of use later but whatever */}\r\n                            <Select\r\n                                disableUnderline={true}\r\n                                className={this.props.classes.input}\r\n                                MenuProps={{ classes: { paper: this.props.classes.menu } }}\r\n                                onChange={this.transactionNameSortChanged.bind(this)}\r\n                                value={this.state.sort[0]}>\r\n                                <MenuItem value=\"\" className={this.props.classes.button}>\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={1} className={this.props.classes.button}>Ascending</MenuItem>\r\n                                <MenuItem value={-1} className={this.props.classes.button}>Descending</MenuItem>\r\n                            </Select>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <Select\r\n                                disableUnderline={true}\r\n                                className={this.props.classes.input}\r\n                                MenuProps={{ classes: { paper: this.props.classes.menu } }}\r\n                                onChange={this.memoSortChanged.bind(this)}\r\n                                value={this.state.sort[1]}>\r\n                                <MenuItem value=\"\" className={this.props.classes.button}>\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={1} className={this.props.classes.button}>Ascending</MenuItem>\r\n                                <MenuItem value={-1} className={this.props.classes.button}>Descending</MenuItem>\r\n                            </Select>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <Select\r\n                                disableUnderline={true}\r\n                                className={this.props.classes.input}\r\n                                MenuProps={{ classes: { paper: this.props.classes.menu } }}\r\n                                onChange={this.paymentSortChanged.bind(this)}\r\n                                value={this.state.sort[2]}>\r\n                                <MenuItem value=\"\" className={this.props.classes.button}>\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={1} className={this.props.classes.button}>Ascending</MenuItem>\r\n                                <MenuItem value={-1} className={this.props.classes.button}>Descending</MenuItem>\r\n                            </Select>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <Select\r\n                                disableUnderline={true}\r\n                                className={this.props.classes.input}\r\n                                MenuProps={{ classes: { paper: this.props.classes.menu } }}\r\n                                onChange={this.depositSortChanged.bind(this)}\r\n                                value={this.state.sort[3]}>\r\n                                <MenuItem value=\"\" className={this.props.classes.button}>\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={1} className={this.props.classes.button}>Ascending</MenuItem>\r\n                                <MenuItem value={-1} className={this.props.classes.button}>Descending</MenuItem>\r\n                            </Select>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={1}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <Button className={this.props.classes.button} onClick={this.handleClear.bind(this)}>Clear</Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Paper className={this.props.classes.paper}>\r\n                            <Button className={this.props.classes.button} onClick={this.handleSubmit.bind(this)}>Submit</Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterComponent","import React from 'react';\r\n\r\nimport CheckRowComponent from './CheckRowComponent';\r\nimport SummaryComponent from './SummaryComponent';\r\n\r\nimport websocketStompClient from './websocket-client';\r\n\r\nimport Timer from './Timer';\r\n\r\nimport './checktablestyle.css';\r\nimport FilterComponent from './FilterComponent';\r\n\r\nclass CheckTableComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checks: [],\r\n            filter: {\r\n                transactionNameFilter: \"\",\r\n                memoFilter: \"\",\r\n                paymentFilter: \"\",\r\n                depositFilter: \"\",\r\n                baseDate: null\r\n            },\r\n            sort: [0,0,0,0] //these are all the checks from the given account, which will be passed to render to individual CheckRowComponents\r\n        }\r\n\r\n        this.scrollEndRef = React.createRef();\r\n        this.newCheckRef = React.createRef();\r\n\r\n        this.handleEdit.bind(this);\r\n        this.scrollToBottom.bind(this);\r\n\r\n        this.refreshChecks.bind(this);\r\n        this.handleNew.bind(this);\r\n        // this.handleEditInterval.bind(this);\r\n        this.intervalPost.bind(this);\r\n        this.handleFilters.bind(this);\r\n        this.handleSort.bind(this);\r\n        this.doSort.bind(this);\r\n        this.handleBaseDate.bind(this);\r\n        this.handleBaseDateClear.bind(this);\r\n\r\n        this.finalCheckRef = React.createRef();\r\n\r\n        // this.isEditing = false;\r\n        // this.editingTimer = new Timer(()=>{\r\n        //     this.isEditing = false;\r\n        //     this.refreshChecks(); //stopped editing so now refresh\r\n        //     this.editingTimer.stop();\r\n        // }, 5000).stop();\r\n\r\n        this.updatedContent = [];\r\n        \r\n\r\n        this.hasBeenRefreshed = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshChecks(this.scrollToBottom);\r\n        this.hasBeenRefreshed = true;\r\n        websocketStompClient.register([\r\n            //the only reason for these to exist is if somebody else does an edit now, seeing as it\r\n            //simply refreshes checks with the new editing system\r\n            //for this, will want to rewrite editing system to have the id of the currently edited item,\r\n            //and do a refresh on everything except that item when a websocket call comes in\r\n            //still want to keep the refresh in intervalPost for when all editing done, to refresh that last\r\n            //item as well\r\n            //this is now [G]\r\n\r\n            //{route: '/event/newCheck', callback: function(){this.refreshChecks(this.scrollToBottom.bind(this)).bind(this); this.finalCheckRef.current.giveFocus().bind(this)}.bind(this)}, //i think this is totally wrong? just refresh the check surely... at least if the id is correct this shouldn't be necessary; need to actually do usability test to see if it crops up\r\n            //{route: '/event/updateCheck', callback: (message) => {this.refreshChecks()}}, //hallelujah it works omg\r\n            // {route: '/event/deleteCheck', callback: (message) => {/*this.refreshChecks.bind(this)*/console.log('websocket delete event')}}\r\n        ]);\r\n\r\n        let promise = Promise.resolve(true);\r\n        let thisRef = this;\r\n        setInterval(function(){\r\n            console.log('in setInterval');\r\n            console.log('promise', promise);\r\n            promise = promise.then(function(){\r\n                return new Promise(function(resolveCallback){\r\n                    thisRef.intervalPost(resolveCallback);\r\n                });\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom(){\r\n        console.log(this.refs);\r\n        this.scrollEndRef.current.scrollIntoView(/*{ behavior: 'smooth' }*/);   \r\n    }\r\n\r\n\r\n    // handleEditInterval(){\r\n    //     console.log('isEditing:',this.isEditing);\r\n    //     console.log('this.updatedContent:', this.updatedContent);\r\n    //     this.isEditing = true;\r\n    //     this.editingTimer.reset();\r\n    // }\r\n\r\n\r\n    //See [H] for improvements to this\r\n    intervalPost(callback){\r\n        console.log('Interval Post', this.state);\r\n        console.log('updatedContent', this.updatedContent);\r\n        if(this.updatedContent.length > 0){\r\n            this.hasBeenRefreshed = false;\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.addEventListener(\"loadend\", callback);\r\n            xhr.open('POST', 'http://localhost:8080/updateChecks', true);\r\n            xhr.setRequestHeader('Content-Type', 'application/json');\r\n            xhr.send(JSON.stringify(this.updatedContent));\r\n            this.updatedContent = [];\r\n        } else if(!this.hasBeenRefreshed){ //if updatedContent isn't empty, it won't refresh; eliminates the need for the timer\r\n            console.log('Interval Post Refresh');\r\n            this.refreshChecks();\r\n            this.hasBeenRefreshed = true;\r\n            callback(true);\r\n        } else{\r\n            callback(true);\r\n        }\r\n    }\r\n\r\n    handleFilters(newFilter){\r\n        this.setState({\r\n            filter: newFilter\r\n        }, this.refreshChecks.bind(this));\r\n    }\r\n\r\n    handleSort(newSort, postSortCallback){\r\n        this.setState({\r\n            sort: newSort\r\n        }, postSortCallback);\r\n    }\r\n\r\n    doSort(list){\r\n        const sortConfig = this.state.sort;\r\n        if(sortConfig[0] != 0){\r\n            list.sort((a, b) => (a.transactionName.toUpperCase() > b.transactionName.toUpperCase()) ? sortConfig[0] : -sortConfig[0])\r\n            console.log(list)\r\n        } else if(sortConfig[1] != 0){\r\n            list.sort((a, b) => (a.memo.toUpperCase() > b.memo.toUpperCase()) ? sortConfig[1] : -sortConfig[1])\r\n        } else if(sortConfig[2] != 0){\r\n            list.sort((a, b) => (parseFloat(a.payment.value) > parseFloat(b.payment.value)) ? sortConfig[2] : -sortConfig[2])\r\n        } else if(sortConfig[3] != 0){\r\n            list.sort((a, b) => (parseFloat(a.deposit.value) > parseFloat(b.deposit.value)) ? sortConfig[3] : -sortConfig[3])\r\n        } else {\r\n            list.sort((a,b) => (a.date-b.date))\r\n        }\r\n    }\r\n\r\n    isValidDate(d) {\r\n        return d instanceof Date && !isNaN(d);\r\n      }\r\n\r\n    getDate(dateStr){\r\n        console.log('datestr', dateStr)\r\n        let date = new Date(dateStr + \"Z\");\r\n        if(this.isValidDate(date)){\r\n            return date;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    refreshChecks(onRefreshCallback) {\r\n        // if(!this.isEditing){\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('POST', 'http://localhost:8080/filteredChecks', true);\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState == 4) {\r\n                    console.log('CheckBook mounted');\r\n                    console.log(JSON.parse(xhr.response));\r\n                    let result = JSON.parse(xhr.response);\r\n                    result.checks.forEach((check, i) => {\r\n                        result.checks[i].date = this.getDate(result.checks[i].date);\r\n                    });\r\n                    if(result.summary.baseDate != null){\r\n                        result.summary.baseDate = this.getDate(result.summary.baseDate.substring(0,10))\r\n                    }\r\n                    this.doSort(result.checks);\r\n                    //sort result.checks\r\n                    this.setState({\r\n                        //checks: result.checks,\r\n                        ...result\r\n                    }, onRefreshCallback);\r\n                }\r\n            }.bind(this);\r\n            xhr.setRequestHeader('Content-Type', 'application/json');\r\n\r\n            console.log('filter state', this.state.filter)\r\n            xhr.send(JSON.stringify(this.state.filter));\r\n        // }\r\n        //----\r\n\r\n        //[See A in plan.txt]\r\n        // this.getSummary((updatedSummary)=>{this.setState({\r\n        //     summary: updatedSummary\r\n        // })})\r\n    }\r\n\r\n    getSummary(onRetreivedCallback) {\r\n        //going to later expand this to include getting the summary of only the selected checks\r\n        //passing those to the server for the summary util to handle\r\n\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('GET', 'http://localhost:8080/summary/0', true);\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                onRetreivedCallback(JSON.parse(xhr.response));\r\n            }\r\n        }\r\n\r\n        xhr.setRequestHeader('Content-Type', 'application/json');\r\n        xhr.send();\r\n\r\n    }\r\n\r\n    handleEdit(updatedCheck) {\r\n        //See [E] in plan.txt\r\n        this.setState(function (prevState) {\r\n            let newChecks = prevState.checks.map(check => (check.id == updatedCheck.id) ?\r\n                {\r\n                    ...check,\r\n                    transactionName: updatedCheck.transactionName,\r\n                    memo: updatedCheck.memo,\r\n                    payment: updatedCheck.payment,\r\n                    deposit: updatedCheck.deposit\r\n                } : check);\r\n            return {\r\n                checks: newChecks\r\n            }\r\n        });\r\n\r\n        let contained = false;\r\n        this.updatedContent.forEach((arrayCheck, i) => {\r\n            if(arrayCheck.id == updatedCheck.id){\r\n                this.updatedContent[i] = updatedCheck;\r\n                contained = true;\r\n            }\r\n        });\r\n        if(!contained){\r\n            this.updatedContent.push(updatedCheck);\r\n        }\r\n\r\n        // this.handleEditInterval();\r\n       \r\n        //POST\r\n        // let xhr = new XMLHttpRequest();\r\n        // xhr.open('POST', 'http://localhost:8080/updateCheck', true);\r\n        // xhr.setRequestHeader('Content-Type', 'application/json');\r\n        // xhr.send(JSON.stringify(updatedCheck));\r\n        // console.log('Sent Updated Check:', updatedCheck);\r\n\r\n\r\n\r\n\r\n        // this.refreshChecks(()=>{console.log('Post-Refresh State: ', this.state)});\r\n\r\n\r\n        //[See A in plan.txt]\r\n        //pass checks to server, \r\n        // this.getSummary((updatedSummary) => { //GET new summary from server, \r\n        //     this.setState({ //set state with new summary\r\n        //         summary: updatedSummary\r\n        //     }, () => { console.log(this.state) }); //callback for debug; remove later\r\n        // });\r\n    }\r\n\r\n     \r\n    handleNew(newCheck){\r\n\r\n        //PROBLEM HERE IS NEW CHECK DOESN'T HAVE AN ID YET!\r\n\r\n        //stuff for handling a new check\r\n        //for now this is same as handleEdit but with an additional push of the updated check\r\n        console.log('New Check', newCheck);\r\n\r\n        console.log(this.newCheckRef.current)\r\n        this.newCheckRef.current.resetState();\r\n        \r\n        this.setState(function (prevState) {\r\n            let newChecks = prevState.checks.map(check => check);\r\n            //See [F] on how to change to internal id\r\n            newCheck.id = newChecks[newChecks.length-1].id + 1; //this is a hack for ids to work\r\n            newChecks.push(newCheck);\r\n            return {\r\n                checks: newChecks\r\n            }\r\n        }, () => {\r\n            this.scrollToBottom();\r\n            this.finalCheckRef.current.giveFocus()\r\n            \r\n            let contained = false;\r\n            this.updatedContent.forEach((arrayCheck, i) => {\r\n                if(arrayCheck.id == newCheck.id){\r\n                    contained = true;\r\n                }\r\n            });\r\n            if(!contained){\r\n                this.updatedContent.push(newCheck); \r\n                //so if a single character is entered, this check will still be pushed\r\n                //BUT, if it is already in there (IE, with >1 character) from future handleEdit events,\r\n                //then it won't be pushed; this prevents accidently reverting to the earlier state when\r\n                //handleNew was called and then handleEdit was called in future\r\n            }\r\n        });\r\n\r\n        //See plan [A] in plans.txt\r\n        // this.getSummary((updatedSummary) => { //GET new summary from server, \r\n        //     this.setState({ //set state with new summary\r\n        //         summary: updatedSummary\r\n        //     }, () => { console.log(this.state) }); //callback for debug; remove later\r\n        // });\r\n    }\r\n\r\n    handleBaseDate(newDate){\r\n        this.setState(function(prevState){\r\n            let newState = {\r\n                summary: {\r\n                    ...prevState.summary,\r\n                    baseDate: newDate\r\n                },\r\n                filter: {\r\n                    ...prevState.filter,\r\n                    baseDate: newDate\r\n                }\r\n            };\r\n            return newState;\r\n    }, this.refreshChecks.bind(this));\r\n        \r\n    }\r\n\r\n    handleBaseDateClear(){\r\n        this.setState(function(prevState){\r\n            let newState = {\r\n                summary: {\r\n                    ...prevState.summary,\r\n                    baseDate: null\r\n                },\r\n                filter: {\r\n                    ...prevState.filter,\r\n                    baseDate: null\r\n                }\r\n            };\r\n            return newState;\r\n    }, this.refreshChecks.bind(this));\r\n    }\r\n\r\n\r\n    //this should have methods for sorting the checks array by the various filtering options to allow that to happen\r\n\r\n    render() {\r\n        return (\r\n            //map each check to CheckRowComponent and replace all props with simple check={eachCheck}\r\n            //then rewrite CheckRowComponent to function with just check prop\r\n            //then add the service calls within handleUserInput to update a check\r\n            //need to figure out how want to handle deletion of a check; should probably be a separate control or if all fields empty\r\n\r\n            //then, go ahead and figure out how you want to display the check register portion itself\r\n            //goal for today is at least above, then tomorrow can do accounts/summary and that is presentable already\r\n\r\n            //then figure out accounts\r\n            //then figure out summary [or summary first]\r\n            //then figure out calendar, etc.\r\n            //then go on and do reporting, login, etc. that's all later\r\n\r\n            <div className={this.props.classes.main}>\r\n                <div className={this.props.classes.filterView}>\r\n                    <FilterComponent classes={{\r\n                        root: this.props.classes.filterRoot,\r\n                        paper: this.props.classes.filterPaper,\r\n                        input: this.props.classes.filterInput,\r\n                        button: this.props.classes.filterButton,\r\n                        select: this.props.classes.filterSelect,\r\n                        menu: this.props.classes.filterMenu,\r\n                    }}\r\n                    handleFilters={this.handleFilters.bind(this)}\r\n                    handleSort={this.handleSort.bind(this)}/>\r\n                </div>\r\n                <div className={this.props.classes.tableView}>\r\n                    <div className=\"check-table\">\r\n                        {this.state.checks.map((checkEntry, i) =>\r\n                            <CheckRowComponent key={checkEntry.id}\r\n                                check={checkEntry}\r\n                                handleEdit={this.handleEdit.bind(this)}\r\n                                classes = {this.props.classes}\r\n                                ref={i==this.state.checks.length-1 ? this.finalCheckRef : undefined} />\r\n                            )}\r\n                        <CheckRowComponent  \r\n                            classes = {this.props.classes}\r\n                            handleEdit={this.handleNew.bind(this)}\r\n                            ref={this.newCheckRef}/>\r\n                        <div ref={this.scrollEndRef} />\r\n                        {/* <button onClick={this.testClickHandler.bind(this)}>Test Check Update</button> */}\r\n                    </div>\r\n                </div>\r\n                <div className={this.props.classes.summaryView}>\r\n                    <SummaryComponent \r\n                        classes={this.props.classes}\r\n                        summary={this.state?.summary}\r\n                        handleBaseDate={this.handleBaseDate.bind(this)}\r\n                        handleBaseDateClear={this.handleBaseDateClear.bind(this)}/> {/*change to getSafe perhaps*/}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            // OLD:\r\n            // <div>\r\n            //     <CheckRowComponent transactionName={\"Name A\"} memo={\"Memo A\"} payment={{\r\n            //         symbol: \"$\",\r\n            //         value: \"12.30\"\r\n            //     }} />\r\n            //     <CheckRowComponent transactionName={\"Populated Name\"} />\r\n            //     <CheckRowComponent deposit={{\r\n            //         symbol: \"₹\",\r\n            //         value: \"699.90\"\r\n            //     }} />\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CheckTableComponent","import React from 'react';\r\n\r\nimport \"./mainstyle.css\";\r\n\r\nclass AccountPaneComponent extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        //don't like how this works right now bc sidebar wraps everything instead of just being the bar, which is bad\r\n        //will correct later though\r\n        return (\r\n            <div class=\"sidebar\">\r\n                <div>{/*intermediate wraper*/}\r\n                    <div>{/*sidebar*/}\r\n                        <button>Account Button</button>\r\n                    </div>\r\n                    <div class=\"main\">{/*main content*/}\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AccountPaneComponent","// import theme from '../../_theme'\n\nexport const subscriptionsItems = [\n  { name: 'GitHub', ratio: 55.3, value: Math.round(55.3 * 144) },\n  { name: 'MaterialUI', ratio: 25.7, value: Math.round(25.7 * 144) },\n  { name: 'Google', ratio: 15.6, value: Math.round(15.6 * 144) },\n  { name: 'ModularCode', ratio: 8.4, value: Math.round(8.4 * 144) },\n  { name: 'GH', ratio: 5.5, value: Math.round(5.5 * 144) },\n]\n\nexport const subscriptionsHistoryChart = {\n  data: {\n    datasets: [\n      {\n        // backgroundColor: theme.palette.secondary.main,\n        // borderColor: theme.palette.secondary.main,\n        backgroundColor: 'rgba(97, 218, 251, 0.3)',\n        borderColor: '#61dafb',\n        borderWidth: 2,\n        label: 'Subscriptions',\n        fill: false,\n        data: [1545, 1350, 1270, 1830, 1955, 1865, 2034, 2544, 1956, 2211, 1540, 1670],\n        yAxisID: 'y1',\n      },\n      {\n        // backgroundColor: 'rgba(136, 151, 170, 0.1)',\n        backgroundColor: 'rgba(97, 218, 251, 0.3)',\n        borderColor: '#8897aa',\n        borderDash: [5, 5],\n        borderWidth: 1,\n        data: [\n          23686,\n          30820,\n          59622,\n          146465,\n          78160,\n          79520,\n          36148,\n          48781,\n          158303,\n          155174,\n          104830,\n          86895,\n        ],\n        label: 'Visits',\n        yAxisID: 'y2',\n      },\n    ],\n    labels: [\n      '2019-03',\n      '2019-04',\n      '2019-05',\n      '2019-06',\n      '2019-07',\n      '2019-08',\n      '2019-09',\n      '2019-10',\n      '2019-11',\n      '2019-12',\n      '2020-01',\n      '2020-02',\n    ],\n  },\n  options: {\n    scales: {\n      xAxes: [\n        {\n          gridLines: { display: false },\n          ticks: { fontColor: '#aaa', autoSkipPadding: 50 },\n        },\n      ],\n      yAxes: [\n        {\n          id: 'y1',\n          gridLines: { display: false },\n          ticks: { fontColor: '#aaa', maxTicksLimit: 5 },\n        },\n        {\n          position: 'right',\n          id: 'y2',\n          gridLines: { display: false },\n          ticks: { fontColor: '#aaa', maxTicksLimit: 5 },\n        },\n      ],\n    },\n    tooltips: {\n      mode: 'index',\n      intersect: false,\n    },\n    hover: {\n      mode: 'index',\n      intersect: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n  },\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  makeStyles,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  IconButton,\n  LinearProgress,\n} from '@material-ui/core'\nimport { Timeline as IconTimeline, MoreVert as IconMoreVert } from '@material-ui/icons'\nimport { Line } from 'react-chartjs-2'\n\nimport { subscriptionsItems, subscriptionsHistoryChart } from './data'\n\nconst Subscriptions = props => {\n  const classes = useStyles()\n\n  return (\n    <Card>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={<IconTimeline className={classes.headerIcon} />}\n        action={\n          <IconButton aria-label=\"settings\" size=\"small\">\n            <IconMoreVert />\n          </IconButton>\n        }\n        title=\"Subscriptions\"\n      />\n      <CardContent className={classes.cardContent}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={8} md={9} className={classes.chartBox}>\n            <div className={classes.chartContainer}>\n              <div className={classes.chart}>\n                <Line\n                  data={subscriptionsHistoryChart.data}\n                  options={subscriptionsHistoryChart.options}\n                />\n              </div>\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={4} md={3} className={classes.ratingBox}>\n            {subscriptionsItems.map(({ name, ratio, value }) => (\n              <div key={name}>\n                <Grid container>\n                  <Grid item xs>\n                    <Typography variant=\"body1\">{name}</Typography>\n                  </Grid>\n                  <Grid item xs className={classes.ratingItemValueBox}>\n                    <Typography\n                      align=\"right\"\n                      variant=\"body2\"\n                      display=\"inline\"\n                      className={classes.ratingItemValue}\n                    >\n                      {value}\n                    </Typography>\n                    <Typography\n                      align=\"left\"\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      className={classes.ratingItemRatio}\n                    >\n                      {ratio}%\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <LinearProgress variant=\"determinate\" value={ratio} color=\"primary\" />\n              </div>\n            ))}\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  )\n}\n\nSubscriptions.propTypes = {}\n\nconst useStyles = makeStyles(theme => ({\n  cardHeader: {\n    borderBottom: '1px solid',\n    borderBottomColor: theme.palette.divider,\n  },\n  cardBody: {\n    overflow: 'hidden',\n  },\n  headerTitleBox: {},\n  headerActionsBox: {\n    textAlign: 'right',\n  },\n  headerIcon: {\n    color: theme.palette.primary.main,\n    verticalAlign: 'sub',\n    marginRight: '.3em',\n  },\n  chartBox: {\n    borderRight: '1px solid',\n    borderRightColor: theme.palette.divider,\n  },\n  chartContainer: {\n    width: '100%',\n    position: 'relative',\n    paddingBottom: '25%',\n    minHeight: 240,\n  },\n  chart: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n  },\n  cardContent: {\n    '&:last-child': {\n      paddingBottom: 'default',\n    },\n  },\n  ratingBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n  ratingItemValueBox: {\n    textAlign: 'right',\n    fontSize: '0.7em',\n  },\n  ratingItemValue: {\n    display: 'inline-block',\n  },\n  ratingItemRatio: {\n    marginLeft: 4,\n    display: 'inline-block',\n    width: '3em',\n    // fontSize: '1em',\n  },\n}))\n\nexport default Subscriptions\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PermanentDrawerLeft() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {/* <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Permanent drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        // classes={{\r\n        //   paper: classes.drawerPaper,\r\n        // }}\r\n        anchor=\"left\"\r\n      >\r\n        {/* <div className={classes.toolbar} /> */}\r\n        {/* <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        {/* <div className={classes.toolbar} /> */}\r\n        <Typography paragraph>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\r\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\r\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\r\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\r\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\r\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\r\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\r\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n          donec massa sapien faucibus et molestie ac.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\r\n          facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\r\n          tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\r\n          consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\r\n          vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\r\n          hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\r\n          tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\r\n          nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n          accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SubscriptionsHistory from '../SubscriptionsHistory/SubscriptionsHistory';\r\n\r\nclass ReportComponent extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                <SubscriptionsHistory />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReportComponent","import React from 'react';\r\n\r\nimport AccountPaneComponent from \"./AccountPaneComponent\";\r\nimport CheckTableComponent from \"./CheckTableComponent\";\r\nimport SummaryComponent from \"./SummaryComponent\";\r\n\r\nimport { Drawer, Grid, Paper, Typography, CssBaseline, List, ListItem, ListItemText, makeStyles, Divider, AppBar, Box, Container, Toolbar, Button, ListItemIcon } from \"@material-ui/core\";\r\nimport AccountBalanceWalletOutlinedIcon from '@material-ui/icons/AccountBalanceWalletOutlined';\r\n\r\nimport Subscriptions from '../SubscriptionsHistory/SubscriptionsHistory'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\n// import SplitPane from \"./SplitPane\"\r\nimport SplitPane from \"react-split-pane\"\r\n\r\n// import Split from \"react-split\";\r\n\r\n// import './mainstyle.css';\r\nimport './split.css';\r\nimport PermanentDrawerLeft from './temp';\r\nimport ReportComponent from './ReportComponent';\r\n\r\nrequire('react-datepicker/dist/react-datepicker.css')\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = makeStyles({\r\n    root: {\r\n        height: \"100vh\", //kind of feels wrong :/\r\n        width: \"100vw\",\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        // border: \"3px tomato solid\"\r\n    },\r\n\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n\r\n    drawerClosed: {\r\n        width: 0,\r\n        flexShrink: 0\r\n    },\r\n\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        backgroundColor: '#20232a'\r\n    },\r\n\r\n    // content: {\r\n    //     flexGrow: 1\r\n    // },\r\n\r\n    main: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        // border: \"2px magenta solid\"\r\n    },\r\n\r\n    filterView:{\r\n        flex: 10,\r\n        display: \"flex\"\r\n    },\r\n\r\n    tableView: {\r\n        flex: 70,\r\n        display: \"flex\",\r\n        flexDirection: 'row',\r\n        overflowY: \"auto\",\r\n        backgroundColor: \"#282c34\",\r\n        // border: \"10px orange solid\"\r\n    },\r\n\r\n    summaryView: {\r\n        flex: 20,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        // border: \"4px red solid\"\r\n    },\r\n\r\n    split: {\r\n        flex: 1\r\n    },\r\n\r\n    appBar: {\r\n        zIndex: 1400\r\n    },\r\n\r\n    toolBar: {\r\n        minHeight: 25,\r\n        backgroundColor: '#20232a'\r\n    },\r\n\r\n    toolBarButton: {\r\n        textTransform: 'none',\r\n        borderRadius: 0,\r\n        maxHeight: 25,\r\n        minHeight: 25,\r\n        maxWidth: 75,\r\n        minWidth: 75,\r\n        fontSize: 15,\r\n        color: 'rgba(255,255,255, 0.7)',\r\n        padding: 0,\r\n        '&:hover': {\r\n            // transition: 0.1,\r\n            backgroundColor: 'rgba(97, 218, 251, 0.8)',\r\n            // color: 'rgba(255,255,255, 0.9)'\r\n        }\r\n    },\r\n\r\n    subToolBar: {\r\n        paddingTop: 25\r\n    },\r\n\r\n    listButton: {\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        // textAlign: \"center\",\r\n        color: 'rgba(255,255,255, 0.7)',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(97, 218, 251, 0.8)',\r\n        }\r\n    },\r\n\r\n    accountIcon: {\r\n        fill: 'rgba(255,255,255, 0.7)',\r\n    },\r\n\r\n    content: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        paddingTop: 25, //this is so that is below the toolbar\r\n        // transition: 'all 500ms cubic-bezier(0.23, 1, 0.32, 1)'\r\n    },\r\n\r\n    filterRoot: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#20232a\"\r\n      },\r\n\r\n    filterPaper: {\r\n        // padding: 10,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        marginBottom: 2,\r\n        marginTop: 2,\r\n        textAlign: 'center',\r\n        backgroundColor: \"#20232a\",\r\n        display: \"flex\"\r\n      },\r\n\r\n    filterInput: {\r\n        border: 'none !important',\r\n        borderColor: 'transparent !important',\r\n        backgroundColor: 'transparent !important',\r\n        padding: '0 !important',\r\n        margin: '0 !important',\r\n        /* flex-grow: 1; */\r\n        flex: 1,\r\n        height: 27,\r\n        color: 'white',\r\n        // boxShadow: 'inset 0px -2px #ebebeb',\r\n        transition: 'box-shadow 0.3s',\r\n        '&:focus': {\r\n            outline: 'none',\r\n            boxShadow: 'inset 0px -2px rgb(97, 218, 251)',\r\n        }\r\n    },\r\n\r\n    filterButton: {\r\n        flex: 1,\r\n        color: 'rgba(255,255,255, 0.7)',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(97, 218, 251, 0.8)',\r\n        }\r\n    },\r\n\r\n    filterSelect: {\r\n        \r\n    },\r\n\r\n    filterMenu: {\r\n        backgroundColor: \"#20232a\",\r\n        color: 'rgba(255,255,255, 0.7)',\r\n        // display: \"flex\"\r\n    },\r\n\r\n    datePicker: {\r\n        \r\n    },\r\n\r\n    summaryDatePicker: {\r\n        backgroundColor: 'transparent',\r\n        color: 'white',\r\n        border: 'none',\r\n        display: 'flex',\r\n        flex: 1,\r\n        ':&:focus':{\r\n            outline: 'none',\r\n        }\r\n    },\r\n\r\n\r\n    // contentShifted: {\r\n    //     display: 'flex',\r\n    //     flex: 1,\r\n    //     marginLeft: -drawerWidth,\r\n    //     transition: 'margin-left 500ms cubic-bezier(0.23, 1, 0.32, 1)'\r\n    // },\r\n});\r\n\r\nfunction Main() {\r\n\r\n    const classes = styles();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const toggleDrawer = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar disableGutters className={classes.toolBar}>\r\n                        <Button className={classes.toolBarButton} onClick={toggleDrawer}>Menu</Button>\r\n                        <Button className={classes.toolBarButton} component={Link} to=\"/\">Main</Button>\r\n                        <Button className={classes.toolBarButton} component={Link} to=\"/report\">Report</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={open ? classes.drawer : classes.drawerClosed}\r\n                    variant=\"persistent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper\r\n                    }}\r\n                    open={open}\r\n                    transitionDuration={0}>\r\n                    <List className={classes.subToolBar}>\r\n                        <ListItem button className={classes.listButton}>\r\n                            <ListItemIcon>\r\n                                <AccountBalanceWalletOutlinedIcon className={classes.accountIcon} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Account A\"></ListItemText>\r\n                        </ListItem>\r\n                        <ListItem button className={classes.listButton}>\r\n                            <ListItemIcon>\r\n                                <AccountBalanceWalletOutlinedIcon className={classes.accountIcon} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Account B\"></ListItemText>\r\n                        </ListItem>\r\n                        <ListItem button className={classes.listButton}>\r\n                            <ListItemIcon>\r\n                                <AccountBalanceWalletOutlinedIcon className={classes.accountIcon} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Account C\"></ListItemText>\r\n                        </ListItem>\r\n                    </List>\r\n                </Drawer>\r\n                <div className={classes.content}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <CheckTableComponent\r\n                                classes={classes} />\r\n                                {/* https://stackoverflow.com/questions/50777333/react-hide-a-component-on-a-specific-route\r\n                                Right now this is re-rendering; want to instead configure where it uses withRouter\r\n                                Instead of how they have it, however, the component is always rendered and will set hidden/visible\r\n                                \r\n                                ALTERNATIVELY (and this is probably better on second thought) just have a method here in Main.jsx\r\n                                that is used as an onClick handler for the routing buttons, and that will hide/unhide the CheckTable\r\n                                (or/and any other components) as necessary [with a direct DOM lookup]*/}\r\n                        </Route>\r\n                        <Route path=\"/report\">\r\n                            <ReportComponent />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // <div className={classes.root}>\r\n        //     <Drawer\r\n        //         className={classes.drawer}\r\n        //         variant=\"permanent\"\r\n        //         classes={{\r\n        //             paper: classes.drawerPaper\r\n        //         }}></Drawer>\r\n        //     <CheckTableComponent\r\n        //         classes={classes}/>\r\n        // </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // <div className={classes.root}>\r\n        //     <CssBaseline />\r\n        //     {/* <div className=\"sidebar\">Sidebar</div> */}\r\n        //     <Drawer\r\n        //         className={classes.drawer}\r\n        //         variant='permanent'\r\n        //         classes={{\r\n        //             paper: classes.drawerPaper\r\n        //         }}></Drawer>\r\n        //     <div className={classes.main}>\r\n        //         {/* <SplitPane\r\n        //             className={classes.split}\r\n        //             split=\"horizontal\"\r\n        //             defaultSize=\"100%\"\r\n        //             > */}\r\n        //             <div className={classes.tableView}>\r\n        //                 <CheckTableComponent />\r\n        //             </div>\r\n        //             <div className={classes.summaryView}>\r\n        //                 <SummaryComponent />\r\n        //             </div>\r\n        //         {/* </SplitPane> */}\r\n        //     </div>\r\n        //     {/* <div className={classes.main}> */}\r\n\r\n\r\n        //     {/* <div className={classes.summaryView}>\r\n        //             <SummaryComponent/>\r\n        //         </div> */}\r\n\r\n        //     {/* <SplitPane>\r\n        //             <SplitPane.Top>\r\n        //                 <div className=\"table-view\">\r\n        //                     <CheckTableComponent/>\r\n        //                 </div>\r\n        //             </SplitPane.Top>\r\n        //             <SplitPane.Bottom>\r\n        //                 <div className=\"summary-view\">\r\n        //                     <SummaryComponent/>\r\n        //                 </div>\r\n        //             </SplitPane.Bottom>\r\n        //         </SplitPane> */}\r\n        //     {/* </div> */}\r\n        // </div>\r\n\r\n        //--------------------------\r\n\r\n        // <PermanentDrawerLeft />\r\n        // <div className=\"temp\">\r\n        //     <CssBaseline/>\r\n        //     <Drawer\r\n        //         className=\"temp-drawer\"\r\n        //         variant=\"permanent\"\r\n        //         anchor=\"left\"></Drawer>\r\n        //     <main className=\"temp-content\">\r\n        //         <Typography paragraph>Lorem ipsum dolor sin amet</Typography>\r\n        //     </main>\r\n        // </div>\r\n\r\n        // <div className={classes.root}>\r\n        //     <CssBaseline />\r\n        //     <Drawer\r\n        //         className={classes.drawer}\r\n        //         variant=\"permanent\"\r\n        //         anchor=\"left\"\r\n        //         classes={{\r\n        //             paper: classes.drawerPaper\r\n        //         }}>\r\n        //         <Divider />\r\n        //         <List>\r\n        //             <ListItem button>\r\n        //                 <ListItemText primary=\"Button A\" />\r\n        //             </ListItem>\r\n        //         </List>\r\n        //     </Drawer>\r\n        //     <Typography paragraph>Lorem ipsum dolor sin amet lorem ispum dolor sin amet</Typography>\r\n        // </div>\r\n\r\n        //------------------------\r\n\r\n        // <div className=\"temp\">\r\n        //     <CssBaseline/>\r\n        //     <Drawer\r\n        //     // className=\"temp-drawer\"\r\n        //     className={classes.test}\r\n        //     variant=\"permanent\"\r\n        //     anchor=\"left\">\r\n        //             {/* <Typography>Hello this is content</Typography> */}\r\n        //             <List>\r\n        //                 <ListItem button>\r\n        //                     <ListItemText primary=\"Text\"/>\r\n        //                 </ListItem>\r\n        //             </List>\r\n        //     </Drawer>\r\n        //     <main className=\"temp2\">\r\n        //         {/* <Grid container>\r\n        //             <Grid item xs={12}>\r\n        //                 <Paper>jlkasjdfklajslkdfjalksjdflkajslkdfjlkasjdflkajskldfjlkasjfd</Paper>\r\n        //             </Grid>\r\n        //         </Grid> */}\r\n        //         <Typography paragraph>Lorem ipsum dolor sin amet</Typography>\r\n        //     </main>\r\n        // </div>\r\n\r\n        // <div className=\"container\">\r\n        //     {/* <Drawer \r\n        //         anchor=\"left\" \r\n        //         variant=\"permanent\"\r\n        //         open/> */}\r\n        //     <div className=\"sidebar\">Sidebar</div>\r\n        //     <div className=\"main\">\r\n        //         <SplitPane>\r\n        //             <SplitPane.Top>\r\n        //                 <div className=\"table-view\">\r\n        //                     <CheckTableComponent/>\r\n        //                 </div>\r\n        //             </SplitPane.Top>\r\n        //             <SplitPane.Bottom>\r\n        //                 <div className=\"summary-view\">\r\n        //                     <SummaryComponent/>\r\n        //                 </div>\r\n        //             </SplitPane.Bottom>\r\n        //         </SplitPane>\r\n        //     </div>\r\n        // </div>\r\n\r\n        // <div className=\"container\">\r\n        //     <div className=\"sidebar\">Sidebar</div>\r\n        //     <div className=\"main\">\r\n        //         <div className=\"table-view\">\r\n        //             <CheckTableComponent/>\r\n        //         </div>\r\n        //         <div className=\"summary-view\">\r\n        //             <SummaryComponent/>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport CheckRowComponent from './main/CheckRowComponent';\nimport CheckTableComponent from './main/CheckTableComponent';\nimport AccountPaneComponent from './main/AccountPaneComponent';\nimport SummaryComponent from './main/SummaryComponent';\nimport Main from './main/Main';\n\nfunction App() {\n\n  return (\n    <Main/>\n  );\n\n  // return (\n  //   <AccountPaneComponent>\n  //     <div className=\"App\">\n  //       <CheckTableComponent/>\n  //       <SummaryComponent/>\n  //       <header className=\"App-header\">\n  //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //         <p>\n  //           Edit <code>src/App.js</code> and save to reload.\n  //         </p>\n  //         <a\n  //           className=\"App-link\"\n  //           href=\"https://reactjs.org\"\n  //           target=\"_blank\"\n  //           rel=\"noopener noreferrer\"\n  //         >\n  //           Learn React\n  //         </a>\n  //       </header>\n  //       <CheckRowComponent />\n  //     </div>\n  //   </AccountPaneComponent>\n  // );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}